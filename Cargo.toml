[package]
name = "task_queue_system"
version = "0.1.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"]
description = "A distributed task queue system built with Rust"

[dependencies]
# Web framework
actix-web = "4.4.0"
actix-rt = "2.9.0"

# Database
sqlx = { version = "0.7.3", features = ["runtime-tokio-rustls", "postgres", "sqlite", "uuid", "chrono", "json", "macros"] }

# Async
tokio = { version = "1.33.0", features = ["full"] }
futures = "0.3.29"
async-trait = "0.1.74"

# Serialization
serde = { version = "1.0.190", features = ["derive"] }
serde_json = "1.0.108"

# Logging and configuration
env_logger = "0.10.0"
log = "0.4.20"
config = "0.13.3"
dotenv = "0.15.0"

# Error handling
thiserror = "1.0.50"
anyhow = "1.0.75"

# UUID generation
uuid = { version = "1.5.0", features = ["serde", "v4"] }

# Date and time
chrono = { version = "0.4.31", features = ["serde"] }

# For task scheduling
chrono-tz = "0.8.4"

# For channels and concurrency
crossbeam-channel = "0.5.8"
parking_lot = "0.12.1"

# For backoff and retry logic
backoff = "0.4.0"

[dev-dependencies]
mockall = "0.11.4"
rand = "0.8.5"
actix-http = "3.4.0"
tokio-test = "0.4.3"